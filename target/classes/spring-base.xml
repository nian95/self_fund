<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.2.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util-3.2.xsd">
    <context:annotation-config/>
    <context:component-scan base-package="com.cccis">
        <context:exclude-filter expression="org.springframework.stereotype.Controller"
                                type="annotation"/>
    </context:component-scan>

    <bean class="com.cccis.foundation.resourcemapping.service.impl.MultiImplAwareBeanPostProcessor"/>

    <bean id="configBean"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:ldap.properties</value>
                <value>classpath:webservice.properties</value>
                <value>classpath:config.properties</value>
                <value>classpath:jms.properties</value>
                <!-- add by zyn 2017-08-03 添加hessian服务配置文件> -->
                <value>classpath:hessian.properties</value>
            </list>
        </property>
        <property name="propertiesArray">
            <array>
                <ref bean="configProperties"/>
                <ref bean="authenticationProperties"/>
                <!--authenticationProperties在使用CAS时该属性配置是不需要的-->
                <!--<ref bean="authenticationProperties"/>-->
            </array>
        </property>
    </bean>

    <bean id="configProvider" class="com.cccis.foundation.config.service.impl.ConfigProviderImpl"
          init-method="initialize" destroy-method="destroy">
        <property name="configFilePaths">
            <array>
                <value>classpath:config.properties,classpath:webservice.properties,classpath:lanAndInternateUrlConfig.properties</value>
            </array>
        </property>
        <property name="monitoring" value="false"/>
    </bean>

    <bean id="sysProConfigProviderImpl" class="com.cccis.foundation.config.service.impl.SysProConfigProviderImpl"
          init-method="initialize">
    </bean>

    <bean id="configProperties" class="com.cccis.foundation.config.service.impl.ConfigPropertiesExporter">
        <property name="configProvider" ref="configProvider"/>
    </bean>

    <bean id="freemarkerConfiguration" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
        <property name="freemarkerVariables">
            <map>
                <entry key="sql_sanitize">
                    <bean class="com.cccis.foundation.security.SqlSanitizeMethod"/>
                </entry>
                <entry key="fragment">
                    <bean class="com.cccis.foundation.pub.dao.impl.FragmentDirective">
                        <property name="queryBuilder" ref="queryBuilder"/>
                    </bean>
                </entry>
                <entry key="str2number">
                    <bean class="com.cccis.foundation.security.String2Number"/>
                </entry>
                <entry key="get_text">
                    <bean class="com.cccis.foundation.security.CodeTextByTypeValue"/>
                </entry>
                <entry key="validFlagYes">
                    <util:constant static-field="com.cccis.foundation.Constant.VALID_FLAG_YES"/>
                </entry>
                <entry key="validFlagNo">
                    <util:constant static-field="com.cccis.foundation.Constant.VALID_FLAG_NO"/>
                </entry>
                <entry key="split_escape">
                    <bean class="com.cccis.foundation.print.utils.SplitAndEscapeMethodModel"/>
                </entry>
                <entry key="sub_str">
                    <bean class="com.cccis.foundation.print.utils.SubStringMethodModel"/>
                </entry>
            </map>
        </property>
        <property name="templateLoaderPath" value="classpath:/template/ftl/"/>
        <property name="preferFileSystemAccess" value="false"/>
        <property name="freemarkerSettings">
            <props>
                <prop key="template_exception_handler">rethrow</prop><!-- ignore,debug,html_debug,rethrow -->
                <prop key="default_encoding">UTF-8</prop>
                <prop key="output_encoding">UTF-8</prop>
                <prop key="locale">zh_CN</prop>
                <prop key="date_format">yyyy-MM-dd</prop>
                <prop key="time_format">HH:mm:ss</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <!-- 可以满足一般需要。默认情况变量为null则替换为空字符串，如果需要自定义，写上${empty!"EmptyValue of fbysss"}的形式即可  -->
                <prop key="classic_compatible">true</prop>
            </props>
        </property>
    </bean>

    <bean id="queryBuilder" class="com.cccis.foundation.pub.dao.impl.QueryBuilderImpl"
          init-method="initialize" destroy-method="destroy">
        <property name="freemarkerConfiguration" ref="freemarkerConfiguration"/>
        <property name="configLocations">
            <list>
                <value>classpath:/query/query-demo.xml</value>
                <value>classpath:/query/query-claim.xml</value>
                <value>classpath:/query/query-batchTransfer.xml</value>
                <value>classpath:/query/query-metadata.xml</value>
                <value>classpath:/query/query-tasklist.xml</value>
                <value>classpath:/query/query-foundation.xml</value>
                <value>classpath:/query/query-sysconfig.xml</value>
                <value>classpath:/query/query-sysmanagement.xml</value>
                <value>classpath:/query/query-property.xml</value>
                <value>classpath:/query/query-rescueFee.xml</value>
                <value>classpath:/query/query-audit.xml</value>
                <value>classpath:/query/query-auditTP.xml</value>
                <value>classpath:/query/query-company.xml</value>
                <value>classpath:/query/query-blacklist.xml</value>
                <value>classpath:/query/query-quote.xml</value>
                <value>classpath:/query/query-specialvehicle.xml</value>
                <value>classpath:/query/query-rules.xml</value>
                <value>classpath:/query/query-profile.xml</value>
                <value>classpath:/query/query-interface.xml</value>
                <value>classpath:/query/query-survey.xml</value>
                <value>classpath:/query/query-salvage.xml</value>
                <value>classpath:/query/query-report.xml</value>
                <value>classpath:/query/query-counterSign.xml</value>
                <value>classpath:/query/query-cooperation.xml</value>
                <value>classpath:/query/query-vehicleDefine.xml</value>
            </list>
        </property>
        <!--<property name="resourceMappingService" ref="resourceMappingService" />-->
        <property name="devMode" value="${pub.queryBuilder.devMode}"/>
        <property name="nativeSqlReturnMap" value="true"/>
    </bean>

    <bean id="daoScanner" class="com.cccis.foundation.pub.dao.impl.DaoScannerImpl">
        <property name="basePackage" value="com.cccis"/>
    </bean>
    <bean id="daoBeanRegisterer" class="com.cccis.foundation.pub.dao.impl.DaoBeanRegister">
        <property name="daoScanner" ref="daoScanner"/>
    </bean>

    <import resource="classpath:spring-ehcache.xml"/>
    <import resource="classpath:spring-datasource.xml"/>
    <import resource="classpath:spring-transcation.xml"/>
    <import resource="classpath:spring-dao.xml"/>
    <import resource="classpath:spring-security.xml"/>
    <!--spring-security-cas.xml该XML配置应用与与CAS对接时启用同时spring-security.xml 需要注视掉-->
    <!--<import resource="classpath:spring-security-cas.xml"/>-->
    <import resource="classpath:spring-ldap.xml"/>
    <import resource="classpath:spring-aop.xml"/>
    <import resource="classpath:quartz.xml"/>
    <import resource="classpath:spring-ruleengine.xml"/>
    <import resource="classpath:spring-ws-core-inbound.xml"/>
    <import resource="classpath:spring-ws-template-inbound.xml"/>
    <import resource="classpath:spring-ws-template-outbound.xml"/>
    <import resource="classpath:spring-ws-template-TPIC-outbound.xml"/>
    <import resource="classpath:spring-ws-template-TPIC-inbound.xml"/>
    <import resource="classpath:spring-jms.xml"/>
    <import resource="classpath:spring-activiti.xml"/>
    <!-- add by yzn 2017-08-01 配置hessian客户端 -->
    <import resource="classpath:spring-hessian-template-TPIC-outbound.xml"/>
</beans>